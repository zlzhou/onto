/*
 * File: app/view/MyWindow12.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyWindow12', {
    extend: 'Ext.window.Window',

    height: 601,
    id: 'ruleWin',
    width: 1134,
    layout: {
        type: 'absolute'
    },
    title: '规则管理',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'textfield',
                    x: 10,
                    y: 30,
                    id: 'ruleName',
                    width: 210,
                    fieldLabel: '新规则名'
                },
                {
                    xtype: 'textfield',
                    x: 220,
                    y: 30,
                    id: 'ruleHead',
                    fieldLabel: ''
                },
                {
                    xtype: 'combobox',
                    x: 410,
                    y: 30,
                    id: 'ruleBody1',
                    fieldLabel: '关系',
                    store: 'RelTermStore'
                },
                {
                    xtype: 'combobox',
                    x: 410,
                    y: 60,
                    id: 'ruleBody3',
                    fieldLabel: '关系',
                    store: 'RelTermStore'
                },
                {
                    xtype: 'textfield',
                    x: 660,
                    y: 30,
                    id: 'ruleBody2',
                    fieldLabel: ''
                },
                {
                    xtype: 'textfield',
                    x: 660,
                    y: 60,
                    id: 'ruleBody4',
                    fieldLabel: ''
                },
                {
                    xtype: 'textfield',
                    x: 10,
                    y: 110,
                    id: 'wholeRule',
                    width: 560,
                    fieldLabel: '规则'
                },
                {
                    xtype: 'textareafield',
                    x: 10,
                    y: 340,
                    height: 212,
                    id: 'resultField',
                    width: 790,
                    fieldLabel: '推理结果'
                },
                {
                    xtype: 'button',
                    x: 490,
                    y: 140,
                    text: '添加规则',
                    listeners: {
                        click: {
                            fn: me.onButtonClick3,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'combobox',
                    x: 10,
                    y: 230,
                    id: 'ruleBox',
                    fieldLabel: '推理输入',
                    store: 'RelTermStore'
                },
                {
                    xtype: 'textfield',
                    x: 310,
                    y: 230,
                    id: 'conXfield',
                    width: 190,
                    fieldLabel: 'X'
                },
                {
                    xtype: 'combobox',
                    x: 510,
                    y: 230,
                    id: 'conXbox',
                    width: 140,
                    fieldLabel: '',
                    store: 'conSerarchStoreBak'
                },
                {
                    xtype: 'textfield',
                    x: 670,
                    y: 230,
                    id: 'conYfield',
                    width: 200,
                    fieldLabel: 'Y'
                },
                {
                    xtype: 'combobox',
                    x: 880,
                    y: 230,
                    id: 'conYbox',
                    fieldLabel: '',
                    store: 'conSearchStore'
                },
                {
                    xtype: 'button',
                    x: 430,
                    y: 260,
                    text: '确定概念X',
                    listeners: {
                        click: {
                            fn: me.onButtonClick1,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    x: 800,
                    y: 260,
                    text: '确定概念Y',
                    listeners: {
                        click: {
                            fn: me.onButtonClick2,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'button',
                    x: 150,
                    y: 300,
                    text: '推理',
                    listeners: {
                        click: {
                            fn: me.onButtonClick,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick3: function(button, e, eOpts) {
        var relid1=Ext.getCmp('ruleBody1').findRecordByValue(Ext.getCmp('ruleBody1').getSubmitValue()).getData(false).id;
        var reltext1=Ext.getCmp('ruleBody1').findRecordByValue(Ext.getCmp('ruleBody1').getSubmitValue()).getData(false).text;
        var text2=Ext.getCmp("ruleBody2").getValue();
        var relid3=Ext.getCmp('ruleBody3').findRecordByValue(Ext.getCmp('ruleBody3').getSubmitValue()).getData(false).id;
        var reltext3=Ext.getCmp('ruleBody3').findRecordByValue(Ext.getCmp('ruleBody3').getSubmitValue()).getData(false).text;
        var text4=Ext.getCmp("ruleBody4").getValue();

        var ruleTerm=Ext.getCmp('ruleName').getValue();
        var ruleHalfHead=Ext.getCmp('ruleHead').getValue();
        var ruleBody=':-'+'r'+relid1+text2+','+'r'+relid3+text4+'.';

        Ext.getCmp('wholeRule').setValue(ruleTerm+ruleHalfHead+'  ||  如果 '+reltext1+text2+', 并且  '+reltext3+text4);

        Ext.Ajax.request({
            url:    '/ontotest/addrule',
            params: {

                ruleTerm:ruleTerm,
                ruleHalfHead:ruleHalfHead,
                ruleBody:ruleBody


            },
            method: 'POST',
            callback: function(options,success,response){

                // var obj=Ext.decode(response.responseText);



                //if(success){Ext.getCmp('ConTreeView').getStore().load();}
                //else {alert('no');}

            }
        }



        );
    },

    onButtonClick1: function(button, e, eOpts) {
        var store=Ext.getCmp('conXbox').getStore();
        //store.getProxy().url='/ontotest/relbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        //alert(Ext.getCmp('coninsSearch').getValue());
        store.getProxy().setExtraParam('searchTerm',Ext.getCmp('conXfield').getValue());
        //store.getProxy().setExtraParam('searchTerm','测试');
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));

        store.load();
    },

    onButtonClick2: function(button, e, eOpts) {
        var store=Ext.getCmp('conYbox').getStore();
        //store.getProxy().url='/ontotest/relbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        //alert(Ext.getCmp('coninsSearch').getValue());
        store.getProxy().setExtraParam('searchTerm',Ext.getCmp('conYfield').getValue());
        //store.getProxy().setExtraParam('searchTerm','测试');
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));

        store.load();
    },

    onButtonClick: function(button, e, eOpts) {
        var ruleid=Ext.getCmp('ruleBox').findRecordByValue(Ext.getCmp('ruleBox').getSubmitValue()).getData(false).id;
        var xf=Ext.getCmp('conXfield').getSubmitValue().length;
        var yf=Ext.getCmp('conYfield').getSubmitValue().length;
        var qx;
        var qy;
        if(xf==0) qx='X';
        else qx=Ext.getCmp('conXbox').findRecordByValue(Ext.getCmp('conXbox').getSubmitValue()).getData(false).id;
        if(yf==0) qy='Y';
        else qy=Ext.getCmp('conYbox').findRecordByValue(Ext.getCmp('conYbox').getSubmitValue()).getData(false).id;

        var rulepara='r'+ruleid+'('+qx+','+qy+').';
        //alert(rulepara);


        Ext.Ajax.request({
            url:    '/ontotest/doreason',
            params: {

                reasonQuery:rulepara


            },
            method: 'POST',
            callback: function(options,success,response){

                // var obj=Ext.decode(response.responseText);

                var obj=Ext.decode(response.responseText);

                Ext.getCmp('resultField').setValue(obj.reasonResultText);


                //if(success){Ext.getCmp('ConTreeView').getStore().load();}
                //else {alert('no');}

            }
        }



        );
    }

});