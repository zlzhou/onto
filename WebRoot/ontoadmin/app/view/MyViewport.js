/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    autoScroll: true,
    layout: {
        type: 'border'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    region: 'west',
                    id: 'UserPanel',
                    width: 150,
                    layout: {
                        type: 'accordion'
                    },
                    title: '用户管理平台',
                    items: [
                        {
                            xtype: 'treepanel',
                            title: '我的本体',
                            store: 'myontostore',
                            viewConfig: {

                            }
                        },
                        {
                            xtype: 'treepanel',
                            title: '协作本体',
                            viewConfig: {

                            }
                        },
                        {
                            xtype: 'treepanel',
                            title: '共享本体',
                            viewConfig: {

                            }
                        },
                        {
                            xtype: 'treepanel',
                            title: 'OWL本体',
                            viewConfig: {

                            }
                        },
                        {
                            xtype: 'treepanel',
                            title: '个人信息',
                            viewConfig: {

                            }
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    region: 'north',
                    height: 62,
                    layout: {
                        type: 'absolute'
                    },
                    title: '本体管理系统',
                    items: [
                        {
                            xtype: 'button',
                            x: 1110,
                            y: 10,
                            width: 50,
                            href: '/ontotest/login/app.html',
                            text: '退出'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    region: 'center',
                    autoShow: true,
                    layout: {
                        type: 'border'
                    },
                    items: [
                        {
                            xtype: 'container',
                            flex: 0,
                            region: 'north',
                            split: false,
                            height: 28,
                            layout: {
                                type: 'absolute'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    x: 240,
                                    y: 0,
                                    text: '概念（实例）搜索',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick17,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 10,
                                    y: 0,
                                    text: '本体',
                                    menu: {
                                        xtype: 'menu',
                                        items: [
                                            {
                                                xtype: 'menuitem',
                                                text: '新建本体',
                                                listeners: {
                                                    click: {
                                                        fn: me.onMenuitemClick,
                                                        scope: me
                                                    }
                                                }
                                            },
                                            {
                                                xtype: 'menuitem',
                                                id: 'renameonto',
                                                text: '重命名本体'
                                            },
                                            {
                                                xtype: 'menuitem',
                                                text: '导入本体'
                                            },
                                            {
                                                xtype: 'menuitem',
                                                text: '导出本体'
                                            },
                                            {
                                                xtype: 'menuitem',
                                                text: '删除本体'
                                            }
                                        ]
                                    }
                                },
                                {
                                    xtype: 'combobox',
                                    x: 60,
                                    y: 0,
                                    id: 'conQueryBox',
                                    width: 180,
                                    fieldLabel: '',
                                    emptyText: '请输入要查询的概念或实例名',
                                    selectOnFocus: true,
                                    anyMatch: true,
                                    store: 'ConTermStore',
                                    typeAhead: true,
                                    valueNotFoundText: '没有该概念或实例'
                                },
                                {
                                    xtype: 'button',
                                    x: 1110,
                                    y: 0,
                                    text: '关系（属性）搜索'
                                },
                                {
                                    xtype: 'combobox',
                                    x: 930,
                                    y: 0,
                                    width: 180,
                                    fieldLabel: '',
                                    emptyText: '请输入要查询的关系或属性名',
                                    anyMatch: true,
                                    store: 'RelTermStore'
                                },
                                {
                                    xtype: 'button',
                                    x: 350,
                                    y: 0,
                                    text: 'Search',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick19,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    x: 400,
                                    y: 0,
                                    text: '规则',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick20,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            margins: '',
                            region: 'center',
                            split: false,
                            autoShow: true,
                            frame: false,
                            id: 'GraphContain',
                            layout: {
                                type: 'border'
                            },
                            items: [
                                {
                                    xtype: 'dataview',
                                    region: 'center',
                                    html: '<iframe scrolling=\'auto\' frameborder=\'0\' width=\'100%\' height=\'100%\' src=\'http://localhost:8080/ontotest/MyJsp.jsp\'> </iframe>',
                                    id: 'GraphView',
                                    itemSelector: 'div',
                                    itemTpl: [
                                        'Data View Item {string}'
                                    ]
                                },
                                {
                                    xtype: 'container',
                                    region: 'north',
                                    height: 27,
                                    items: [
                                        {
                                            xtype: 'checkboxfield',
                                            id: 'nodeExp',
                                            fieldLabel: '',
                                            boxLabel: '选中展开两级节点'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            region: 'west',
                            autoShow: true,
                            width: 248,
                            layout: {
                                type: 'border'
                            },
                            items: [
                                {
                                    xtype: 'tabpanel',
                                    region: 'center',
                                    id: 'ConPanel',
                                    activeTab: 0,
                                    items: [
                                        {
                                            xtype: 'panel',
                                            height: 517,
                                            layout: {
                                                type: 'anchor'
                                            },
                                            title: '概念',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    text: '插入子概念',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick2,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '兄弟概念',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '删除概念',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick1,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '重命名',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick9,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '属性分类',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick16,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'treepanel',
                                                    dock: 'bottom',
                                                    height: 515,
                                                    id: 'ConTree',
                                                    title: 'My Tree Panel',
                                                    store: 'ConTreeStore',
                                                    viewConfig: {
                                                        id: 'ConTreeView',
                                                        listeners: {
                                                            itemclick: {
                                                                fn: me.onConTreeViewItemClick,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    dockedItems: [
                                                        {
                                                            xtype: 'treepanel',
                                                            dock: 'bottom',
                                                            height: 266,
                                                            id: 'ConBodyTree',
                                                            width: 129,
                                                            title: 'My Tree Panel',
                                                            store: 'ConBodyTreeStore',
                                                            viewConfig: {
                                                                id: 'ConBodyTreeView'
                                                            },
                                                            dockedItems: [
                                                                {
                                                                    xtype: 'container',
                                                                    dock: 'top',
                                                                    height: 21,
                                                                    width: 100,
                                                                    layout: {
                                                                        type: 'anchor'
                                                                    },
                                                                    items: [
                                                                        {
                                                                            xtype: 'button',
                                                                            width: 131,
                                                                            text: '添加关系及值',
                                                                            listeners: {
                                                                                click: {
                                                                                    fn: me.onButtonClick7,
                                                                                    scope: me
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            xtype: 'button',
                                                                            width: 100,
                                                                            text: '删除关系及值',
                                                                            listeners: {
                                                                                click: {
                                                                                    fn: me.onButtonClick8,
                                                                                    scope: me
                                                                                }
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'panel',
                                            height: 517,
                                            id: 'InsPanel',
                                            layout: {
                                                type: 'anchor'
                                            },
                                            title: '实例',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    text: '插入实例',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick3,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '删除实例',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick4,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '重命名',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick10,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'treepanel',
                                                    dock: 'bottom',
                                                    height: 495,
                                                    id: 'InsTree',
                                                    title: 'My Tree Panel',
                                                    store: 'InsTreeStore',
                                                    root: {
                                                        text: 'instants',
                                                        id: '011'
                                                    },
                                                    viewConfig: {
                                                        id: 'InsTreeView',
                                                        listeners: {
                                                            itemclick: {
                                                                fn: me.onInsTreeViewItemClick,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    dockedItems: [
                                                        {
                                                            xtype: 'treepanel',
                                                            dock: 'bottom',
                                                            height: 338,
                                                            id: 'InsBodyTree',
                                                            width: 100,
                                                            title: 'My Tree Panel',
                                                            store: 'InsBodyTreeStore',
                                                            viewConfig: {
                                                                id: 'InsBodyTreeView'
                                                            },
                                                            dockedItems: [
                                                                {
                                                                    xtype: 'container',
                                                                    dock: 'top',
                                                                    width: 100,
                                                                    layout: {
                                                                        type: 'anchor'
                                                                    },
                                                                    items: [
                                                                        {
                                                                            xtype: 'button',
                                                                            width: 113,
                                                                            text: '添加实例关系',
                                                                            listeners: {
                                                                                click: {
                                                                                    fn: me.onButtonClick11,
                                                                                    scope: me
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            xtype: 'button',
                                                                            width: 120,
                                                                            text: '删除实例关系'
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'container',
                            region: 'east',
                            width: 215,
                            layout: {
                                type: 'border'
                            },
                            items: [
                                {
                                    xtype: 'tabpanel',
                                    region: 'west',
                                    id: 'RelPanel',
                                    width: 224,
                                    activeTab: 0,
                                    items: [
                                        {
                                            xtype: 'panel',
                                            height: 517,
                                            title: '关系',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    text: '添加关系',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick5,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '删除关系',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick6,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '重命名',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick12,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'treepanel',
                                                    dock: 'bottom',
                                                    height: 495,
                                                    id: 'RelTree',
                                                    title: 'My Tree Panel',
                                                    store: 'RelTreeStore',
                                                    viewConfig: {
                                                        id: 'RelTreeView',
                                                        listeners: {
                                                            itemclick: {
                                                                fn: me.onRelTreeViewItemClick,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    dockedItems: [
                                                        {
                                                            xtype: 'treepanel',
                                                            dock: 'bottom',
                                                            height: 291,
                                                            id: 'RelBodyTree',
                                                            width: 100,
                                                            title: 'My Tree Panel',
                                                            store: 'RelBodyTreeStore',
                                                            dockedItems: [
                                                                {
                                                                    xtype: 'container',
                                                                    dock: 'top',
                                                                    height: 24,
                                                                    width: 100,
                                                                    items: [
                                                                        {
                                                                            xtype: 'button',
                                                                            text: '添加关系性质及值',
                                                                            listeners: {
                                                                                click: {
                                                                                    fn: me.onButtonClick18,
                                                                                    scope: me
                                                                                }
                                                                            }
                                                                        },
                                                                        {
                                                                            xtype: 'button',
                                                                            text: '删除关系性质及值'
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            viewConfig: {
                                                                id: 'RelBodyTreeView'
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'panel',
                                            title: '属性',
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    text: '添加属性',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick13,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '删除属性',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick14,
                                                            scope: me
                                                        }
                                                    }
                                                },
                                                {
                                                    xtype: 'button',
                                                    text: '重命名',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick15,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ],
                                            dockedItems: [
                                                {
                                                    xtype: 'treepanel',
                                                    dock: 'bottom',
                                                    height: 496,
                                                    id: 'AttTree',
                                                    title: 'My Tree Panel',
                                                    store: 'AttTreeStore',
                                                    viewConfig: {
                                                        id: 'AttTreeView',
                                                        listeners: {
                                                            itemclick: {
                                                                fn: me.onAttTreeViewItemClick,
                                                                scope: me
                                                            }
                                                        }
                                                    },
                                                    dockedItems: [
                                                        {
                                                            xtype: 'treepanel',
                                                            dock: 'bottom',
                                                            height: 260,
                                                            id: 'AttBodyTree',
                                                            width: 100,
                                                            title: 'My Tree Panel',
                                                            store: 'AttBodyTreeStore',
                                                            viewConfig: {
                                                                id: 'AttBodyTreeView'
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick17: function(button, e, eOpts) {
        var relid=Ext.getCmp('conQueryBox').findRecordByValue(Ext.getCmp('conQueryBox').getSubmitValue()).getData(false);
        //alert(relid);
        //Ext.getCmp('ConTreeView').getSelectionModel().select(relid,false);
        var tree=Ext.getCmp('ConTree');
        Ext.Ajax.request({
            url:    '/ontotest/getexppath',
            params: {aimIdForExp:relid.id},
            method: 'POST',
            callback: function(options,success,response){

                var txt=Ext.JSON.decode(response.responseText.trim()); 
                tree.expandPath(txt.expPath);
                alert(relid);

                var treeview = Ext.getCmp('ConTreeView');
                var no=tree.getStore().getNodeById(relid.id);
                alert(no);
                //alert(record.getById());
                //var node=tree.getSelectionModel().select(relid);

                // alert(node);
                //var node=tree.getRootNode().findChild('id',relid);
                //alert(Ext.getCmp('ConTreeView'));
                //alert( tree.getSelectionModel().getSelection());
                Ext.getCmp('ConTreeView').fireEvent('itemclick',Ext.getCmp('ConTreeView'),record);

            }
        });



        //var node=Ext.getCmp('ConTreeView').getTreeStore().getNodeById(relid);





        //var node=panel.getRootNode().findChild('id',relid);
        //alert(node);
        //panel.getSelectionModel().select(node);
        //panel.focusNode(relid);
        //Ext.getCmp('ConTreeView').fireEvent('itemclick',Ext.getCmp('ConTreeView'),node);


    },

    onMenuitemClick: function(item, e, eOpts) {
        var win=new MyApp.view.MyWindow();

        win.show();
    },

    onButtonClick19: function(button, e, eOpts) {
        var addrelofconwin=new MyApp.view.MyWindow11();

        addrelofconwin.show();
    },

    onButtonClick20: function(button, e, eOpts) {

        var addrelofconwin=new MyApp.view.MyWindow12();


        addrelofconwin.show();

    },

    onButtonClick2: function(button, e, eOpts) {
        var node=Ext.getCmp('ConTreeView').getSelectionModel().getSelection();
        var n=node[0];
        //alert(node);
        //if(n.isLeaf()){}
        if(n.get('leaf')){n.set('leaf',false);}
        //alert('a');
        //n.appendChild({text:'请输入概念名',leaf:true});

        Ext.Ajax.request({
            url:    '/ontotest/addcon',
            params: {newConTerm: n.get('text'),fatherNode:n.get('id'),newConTermId:null,sonNodeFlag:true},
            method: 'POST',
            callback: function(options,success,response){

                var obj=Ext.decode(response.responseText);

                n.appendChild({text:obj.newConTerm,id:obj.newConTermId,leaf:true});
                // if(success){}
                //else {alert('no');}

            }
        }



        );

    },

    onButtonClick: function(button, e, eOpts) {
        //alert(Ext.getClassName(this));
        var node=Ext.getCmp('ConTreeView').getSelectionModel().getSelection();
        var n=node[0].parentNode;
        //n.appendChild({text:'请输入概念名',leaf:true});

        Ext.Ajax.request({
            url:    '/ontotest/addcon',
            params: {newConTerm: n.get('text'),fatherNode:n.get('id'),newConTermId:null},
            method: 'POST',
            callback: function(options,success,response){

                var obj=Ext.decode(response.responseText);
                n.appendChild({text:obj.newConTerm,id:obj.newConTermId,leaf:true});

                //if(success){Ext.getCmp('ConTreeView').getStore().load();}
                //else {alert('no');}

            }
        }



        );
    },

    onButtonClick1: function(button, e, eOpts) {
        //var node=button.ownerCt.ownerCt.getSelectionModel().getSelection();
        var node=Ext.getCmp('ConTree').getSelectionModel().getSelection();
        var n=node[0];
        //alert(node);
        //alert(Ext.getCmp('addb'));
        //n.appendChild({text:'oc',id:'05',leaf:true});

        Ext.Ajax.request({
            url:    '/ontotest/delcon',
            params: {newConTerm:n.get('text'),newConTermId:n.get('id')},
            method: 'POST',
            callback: function(options,success,response){


                if(success){n.remove();}
                //else {alert('no');}

            }
        }



        );
    },

    onConTreeViewItemClick: function(dataview, record, item, index, e, eOpts) {
        //alert('aaa');
        //var node=Ext.getCmp('ConTreeView').getSelectionModel().getSelection();
        //var n=node[0];
        //alert(record);
        if(record.isLeaf()){
            Ext.getCmp('InsPanel').setDisabled(false);
            var root=Ext.getCmp('InsTree');

            root.setRootNode({text:record.get('text'),id:record.get('id'),expanded:false});
            // Ext.getCmp('InsTree').getStore().load();

        }
        else{Ext.getCmp('InsPanel').setDisabled(true);}

        var nodeexp=Ext.getCmp('nodeExp').getValue();
        //alert(nodeexp);

        Ext.Ajax.request({
            url:    '/ontotest/arbor',
            params: {fatherId:record.get('id'),nodeExpand:nodeexp},
            method: 'POST',
            callback: function(options,success,response){

                Ext.getCmp('GraphView').refresh();
                //if(success){Ext.getCmp('ConTreeView').getStore().load();}
                //else {alert('no');}

            }
        }



        );



        var store=Ext.getCmp('ConBodyTree').getStore();
        store.getProxy().url='/ontotest/conbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        store.getProxy().setExtraParam('ConIdForBody',record.get('id'));
        //alert(record.get('id'));
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));
        //alert('ok');
        store.load();
        //alert(record.get('id'));
        //alert(record.get('id'));


        //store.getProxy().url='/ontotest/asyncdata';
    },

    onButtonClick7: function(button, e, eOpts) {
        var addrelofconwin=new MyApp.view.MyWindow1();

        addrelofconwin.show();
    },

    onButtonClick8: function(button, e, eOpts) {
        //var node=button.ownerCt.ownerCt.getSelectionModel().getSelection();
        var node=Ext.getCmp('ConBodyTree').getSelectionModel().getSelection();
        var n=node[0];
        var cnode=Ext.getCmp('ConTree').getSelectionModel().getSelection();
        var cn=cnode[0];

        //alert(cn.get('id'));
        //alert(node);
        //alert(Ext.getCmp('addb'));
        //n.appendChild({text:'oc',id:'05',leaf:true});
        if((n.get('id').charAt(0)=='2')){

            Ext.MessageBox.confirm('提示','确定要删除该关系吗？ 该关系的值将全部被删除！！！',function(btn){

                if(btn=="yes") 

                Ext.Ajax.request({
                    url:    '/ontotest/delrelofcon',
                    params: {newConTerm:n.get('text'),newConTermId:n.get('id'),aimCon:cn.get('id'),relofCon:n.get('id')},
                    method: 'POST',
                    callback: function(options,success,response){

                        if(success){n.remove();}
                        else {alert('no');}

                    }
                }



                );



            });

        }

        else {

            var nf=n.parentNode;
            Ext.MessageBox.confirm('提示','确定要删除该关系值吗？',function(btn){

                if(btn=="yes") {

                    Ext.Ajax.request({
                        url:    '/ontotest/delrelvalofcon',
                        params: {newConTerm:n.get('text'),newConTermId:n.get('id'),aimCon:cn.get('id'),relofCon:nf.get('id')},
                        method: 'POST',
                        callback: function(options,success,response){

                            if(success){n.remove();}
                            else {alert('no');}

                        }
                    }



                    );

                }


            });





        }



        //if((n.get('id').charAt(0)=='2'))  alert('ok');
        //if((n.get('id').charAt(0)=='1'))  alert('ok');

        //Ext.Ajax.request({
        //    url:    '/ontotest/delrel',
        //    params: {newConTerm:n.get('text'),newConTermId:n.get('id')},
        //    method: 'POST',
        //    callback: function(options,success,response){


        //if(success){n.remove();}
        //else {alert('no');}

        //}
        //}



        //);


    },

    onButtonClick9: function(button, e, eOpts) {
        var updatetermWin=new MyApp.view.MyWindow3();

        updatetermWin.show();

        var node=Ext.getCmp('ConTreeView').getSelectionModel().getSelection();
        var n=node[0];
        //alert(n.get('text'));
        //n.appendChild({text:'请输入概念名',leaf:true});
        var oldterm=n.get('text');
        Ext.getCmp('updateConOldTerm').setValue(oldterm);
    },

    onButtonClick16: function(button, e, eOpts) {
        var classwin=new MyApp.view.MyWindow10();

        classwin.show();

        var node=Ext.getCmp('ConTreeView').getSelectionModel().getSelection();
        var n=node[0];
        Ext.getCmp('classCon').setValue(n.get('text'));
        Ext.getCmp('fatherName').setValue(n.get('text'));

        var store=Ext.getCmp('classRel').getStore();
        //store.getProxy().url='/ontotest/conbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        store.getProxy().setExtraParam('ConIdForBody',n.get('id'));
        //alert(record.get('id'));
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));
        //alert('ok');
        store.load();
    },

    onButtonClick3: function(button, e, eOpts) {
        //alert(Ext.getClassName(this));
        var node=Ext.getCmp('InsTree').getRootNode();
        //alert(node.get('id'));
        //var n=node[0];
        //n.appendChild({text:'请输入概念名',leaf:true});

        Ext.Ajax.request({
            url:    '/ontotest/addins',
            params: {newConTerm: node.get('text')+'-'+'实例',fatherNode:node.get('id'),newConTermId:null},
            method: 'POST',
            callback: function(options,success,response){

                var obj=Ext.decode(response.responseText);


                if(success){ node.appendChild({text:obj.newConTerm,id:obj.newConTermId,leaf:true});Ext.getCmp('InsTreeView').getStore().load();}
                else {alert('no');}

            }
        }



        );
    },

    onButtonClick4: function(button, e, eOpts) {
        var node=Ext.getCmp('InsTreeView').getSelectionModel().getSelection();
        var rnid=Ext.getCmp('InsTree').getRootNode().get('id');
        var n=node[0];


        if((n.get('id')==rnid)){

            Ext.MessageBox.confirm('提示','确定要删所有实例吗！！！',function(btn){

                if(btn=="yes") 

                Ext.Ajax.request({
                    url:    '/ontotest/delrelofcon',
                    params: {newConTerm:n.get('text'),newConTermId:n.get('id'),aimCon:rnid,relofCon:'2100000004'},//直接指定是实例关系
                    method: 'POST',
                    callback: function(options,success,response){

                        if(success){n.remove();}
                        else {alert('no');}

                    }
                }



                );



            });

        }

        else {

            var nf=n.parentNode;
            Ext.MessageBox.confirm('提示','确定要删除该实例吗？',function(btn){

                if(btn=="yes") {

                    Ext.Ajax.request({
                        url:    '/ontotest/delrelvalofcon',
                        params: {newConTerm:n.get('text'),newConTermId:n.get('id'),aimCon:nf.get('id'),relofCon:'2100000004'},
                        method: 'POST',
                        callback: function(options,success,response){

                            if(success){n.remove();}
                            else {alert('no');}

                        }
                    }



                    );

                }


            });





        }
    },

    onInsTreeViewItemClick: function(dataview, record, item, index, e, eOpts) {
        //alert('aaa');
        var node=Ext.getCmp('InsTreeView').getSelectionModel().getSelection();
        var n=node[0];





        var store=Ext.getCmp('InsBodyTree').getStore();

        store.getProxy().url='/ontotest/insbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        store.getProxy().setExtraParam('ConIdForBody',record.get('id'));
        //alert(record.get('id'));
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));
        //alert('ok');
        store.load();
        //alert(record.get('id'));
        //alert(record.get('id'));

    },

    onButtonClick11: function(button, e, eOpts) {
        var node=Ext.getCmp('InsTreeView').getSelectionModel().getSelection();
        var n=node[0];

        if (n.get('id').charAt(1)=='0') {alert("请选择实例");}


        else {

            var addrelofinswin=new MyApp.view.MyWindow5();

            addrelofinswin.show();

            var store=Ext.getCmp('insRel').getStore();

            store.getProxy().setExtraParam('ConIdForBody',n.get('id'));


        }
    },

    onButtonClick10: function(button, e, eOpts) {
        var updateInsWin=new MyApp.view.MyWindow4();

        updateInsWin.show();

        var node=Ext.getCmp('InsTreeView').getSelectionModel().getSelection();
        var n=node[0];
        //alert(n.get('text'));
        //n.appendChild({text:'请输入概念名',leaf:true});
        var oldterm=n.get('text');
        Ext.getCmp('updateInsOldTerm').setValue(oldterm);
    },

    onButtonClick5: function(button, e, eOpts) {

        var addRelWin=new MyApp.view.MyWindow8();

        addRelWin.show();







        //alert(Ext.getCmp('RelProp').getValue());



    },

    onButtonClick6: function(button, e, eOpts) {
        //var node=button.ownerCt.ownerCt.getSelectionModel().getSelection();
        var node=Ext.getCmp('RelTreeView').getSelectionModel().getSelection();
        n=node[0];
        //alert(node);
        //alert(Ext.getCmp('addb'));
        //n.appendChild({text:'oc',id:'05',leaf:true});
        //n.remove();

        Ext.Ajax.request({
            url:    '/ontotest/delrel',
            params: {newConTerm:n.get('text'),newConTermId:n.get('id')},
            method: 'POST',
            callback: function(options,success,response){


                if(success){n.remove();}
                //else {alert('no');}

            }
        }



        );

    },

    onButtonClick12: function(button, e, eOpts) {
        var updatetermWin=new MyApp.view.MyWindow6();

        updatetermWin.show();

        var node=Ext.getCmp('RelTreeView').getSelectionModel().getSelection();
        var n=node[0];
        //alert(n.get('text'));
        //n.appendChild({text:'请输入概念名',leaf:true});
        var oldterm=n.get('text');
        Ext.getCmp('updateRelOldTerm').setValue(oldterm);
    },

    onRelTreeViewItemClick: function(dataview, record, item, index, e, eOpts) {
        //alert('aaa');
        //Ext.getCmp('InsTree').setRootNode({text:record.get('text'),expanded:true});

        var store=Ext.getCmp('RelBodyTree').getStore();
        store.getProxy().url='/ontotest/relbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        store.getProxy().setExtraParam('ConIdForBody',record.get('id'));
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));

        store.load();
        //alert(record.get('id'));
        //alert(record.get('id'));


        //store.getProxy().url='/ontotest/asyncdata';
    },

    onButtonClick18: function(button, e, eOpts) {
        var addrelofconwin=new MyApp.view.MyWindow9();

        addrelofconwin.show();
    },

    onButtonClick13: function(button, e, eOpts) {
        var node=Ext.getCmp('AttTreeView').getSelectionModel().getSelection();
        if (node[0].get('id')=="2000000000") n=node[0];
        else  n=node[0].parentNode;


        Ext.Ajax.request({
            url:    '/ontotest/addatt',
            params: {newConTerm: '属性',fatherNode:n.get('id'),newConTermId:null},
            method: 'POST',
            callback: function(options,success,response){

                var obj=Ext.decode(response.responseText);
                n.appendChild({text:obj.newConTerm,id:obj.newConTermId,leaf:true});

                //if(success){Ext.getCmp('ConTreeView').getStore().load();}
                //else {alert('no');}

            }
        }



        );
    },

    onButtonClick14: function(button, e, eOpts) {
        var node=Ext.getCmp('AttTreeView').getSelectionModel().getSelection();
        n=node[0];
        //alert(node);
        //alert(Ext.getCmp('addb'));
        //n.appendChild({text:'oc',id:'05',leaf:true});
        //n.remove();

        Ext.Ajax.request({
            url:    '/ontotest/delrel',
            params: {newConTerm:n.get('text'),newConTermId:n.get('id')},
            method: 'POST',
            callback: function(options,success,response){


                if(success){n.remove();}
                //else {alert('no');}

            }
        }



        );

    },

    onButtonClick15: function(button, e, eOpts) {
        var updatetermWin=new MyApp.view.MyWindow7();

        updatetermWin.show();

        var node=Ext.getCmp('AttTreeView').getSelectionModel().getSelection();
        var n=node[0];
        //alert(n.get('text'));
        //n.appendChild({text:'请输入概念名',leaf:true});
        var oldterm=n.get('text');
        Ext.getCmp('updateAttOldTerm').setValue(oldterm);
    },

    onAttTreeViewItemClick: function(dataview, record, item, index, e, eOpts) {
        //alert('aaa');
        //Ext.getCmp('InsTree').setRootNode({text:record.get('text'),expanded:true});

        var store=Ext.getCmp('AttBodyTree').getStore();
        store.getProxy().url='/ontotest/relbodydata';
        //alert(record.get('id'));

        //alert(record.get('id'));
        store.getProxy().setExtraParam('ConIdForBody',record.get('id'));
        //store.setRootNode({node:{text:record.get('id')}});

        //alert(store.isLoading());

        //store.load({params:{ConIdForBody:'1000000000'},node:{text:'cid',id:'cid',expanded:false}});
        //alert(Ext.getCmp('ontoGraph'));

        store.load();
        //alert(record.get('id'));
        //alert(record.get('id'));


        //store.getProxy().url='/ontotest/asyncdata';
    }

});